;; Lenovo Thinkpad t480s
(defcfg
    process-unmapped-keys no
    log-layer-changes     yes
    notify-error          yes
)

(defsrc
    esc  f1  f2  f3  f4  f5  f6  f7  f8  f9  f10  f11  f12 home end  ins  del
    grv  1    2    3    4    5    6    7    8    9    0    min  eql       bspc
    tab       q    w    e    r    t    y    u    i    o    p    [    ]    \
    caps      a    s    d    f    g    h    j    k    l    ;    apos      ent
    lsft      z    x    c    v    b    n    m    ,    .    /              rsft
    lctl wkup lmet lalt           spc            ralt prnt rctl pgup up   pgdn
                                                                left down rght
)

(deflayer qwerty-home-row
    _    _   _   _   _   _   _   _   _   _   _    _    _   @lyt @hmr @rst _
    @~   _    _    _    _    _    _    _    _    _    _    _    _         _
    _         _    _    _    _    _    _    _    _    _    _    _    _    _
    @md1      @hr1 @hr2 @hr3 @hr4 _    _    @hr5 @hr6 @hr7 @hr8 _         @md3
    @lsf      _    _    _    _    _    _    _    _    _    _              @rsf
    _    _    _    @md2           _              @md4 _    _    _    _    _
                                                                _    _    _
)

(deflayermap (qwerty)
    home @lyt
    end  @hmr
    ins  @rst
    grv  @~
)

(deflayer graphite
    _    _   _   _   _   _   _   _   _   _   _    _    _   @lyt @hmr @rst _
    @~   _    _    _    _    _    _    _    _    _    _    [    ]         _
    _         b    l    d    w    z    @g'  f    o    u    j    ;    eql  _
    _         n    r    t    s    g    y    h    a    e    i    @g,       _
    _         q    x    m    c    v    k    p    .    @g-  @g/            _
    _    _    _    _              _              _    _    _    _    _    _
                                                                _    _    _
)

(deflayer graphite-home-row
    _    _   _   _   _   _   _   _   _   _   _    _    _   @lyt @hmr @rst _
    @~   _    _    _    _    _    _    _    _    _    _    [    ]         _
    _         b    l    d    w    z    @g'  f    o    u    j    ;    eql  _
    @md1      @hr1 @hr2 @hr3 @hr4 g    y    @hr5 @hr6 @hr7 @hr8 @g,       @md3
    @lsf      q    x    m    c    v    k    p    .    @g-  @g/            @rsf
    _    _    _    @md2           _              @md4 _    _    _    _    _
                                                                _    _    _
)

;; NOTE: Had to move nav keys up to avoid key ghosting
(deflayer nav
    caps nlck slck _   _   _   _   _   _   _   _   _   _   _    _    _    _
    @cw  _    ins  up   tab  _    _    _    pp   prev next vold volu      mute
    @tab      tab  left down rght _    _    mwu  mwd  mwl  mwr  _    brdn brup
    _         ent  _    home end  _    _    _    _    _    _    _         _
    _         _    _    pgup pgdn _    _    _    _    _    _              _
    _    _    _    del            bspc           _    _    _    _    _    _
                                                                _    _    _
)

(deflayer sym
    _    _    _    _   _   _   _   _   _   _   _   _   _   _    _    _    _
    _    _    _    _    _    _    _    _    _    _    _    _    _         _
    _         _    _    _    @!   @$   @#   @~   _    _    _    _    _    _
    _         @<   [    @{   @op  @&   @|   @cp  @}   ]    @>   _         _
    _         _    _    _    @?   @^   @%   @@   _    _    _              _
    _    _    _    _              _              _    _    _    _    _    _
                                                                _    _    _
)

(deflayer num
    _    _    _    _   _   _   _   _   _   _   _   _   _   _    _    _    _
    _    @ch8 @ch4 @ch2 @ch1 _    _    _    _    _    _    _    _         _
    _         _    _    _    _    _    @*   kp7  kp8  kp9  eql  _    _    _
    _         _    _    _    _    _    @+   kp4  kp5  kp6  kp0  kprt      _
    _         _    _    _    _    _    @car kp1  kp2  kp3  @.             _
    _    _    _    _              _              bspc _    _    _    _    _
                                                                _    _    _
)

(deflayer fun
    _    _    _    _   _   _   _   _   _   _   _   _   _   _    _    _    _
    _    _    _    _    _    _    _    _    _    _    _    _    _         _
    _         @f12 @f7  @f8  @f9  _    _    _    _    _    _    _    _    _
    _         @f11 @f4  @f5  @f6  _    _    _    _    _    _    _         _
    _         @f10 @f1  @f2  @f3  _    _    _    _    _    _              _
    _    _    _    _              _              _    _    _    _    _    _
                                                                _    _    _
)

(defvar
    tap-time     100
    hold-time    150
    timeout      300
    long-timeout 3000
)

(defalias
    lyt (tap-dance $timeout (_ (switch 
        ((base-layer qwerty)) (layer-switch graphite) break
        ((base-layer qwerty-home-row)) (layer-switch graphite-home-row) break
        ((base-layer graphite)) (layer-switch qwerty) break
        ((base-layer graphite-home-row)) (layer-switch qwerty-home-row) break
    )))
    hmr (tap-dance $timeout (_ (switch 
        ((base-layer qwerty)) (layer-switch qwerty-home-row) break
        ((base-layer qwerty-home-row)) (layer-switch qwerty) break
        ((base-layer graphite)) (layer-switch graphite-home-row) break
        ((base-layer graphite-home-row)) (layer-switch graphite) break
    )))
    rst (tap-dance $timeout (_ lrld))

    ~   (fork S-grv (unshift grv) (lsft rsft d k))
    lsf (one-shot-release $long-timeout lsft)
    rsf (one-shot-release $long-timeout rsft)

    md1 (tap-hold $tap-time $hold-time esc (layer-toggle nav))
    md2 (tap-hold $tap-time $hold-time rpt (layer-toggle sym))
    md3 (tap-hold $tap-time $hold-time _   (layer-toggle num))
    md4 (tap-hold $tap-time $hold-time rpt (layer-toggle fun))

    hrt1 (switch
        ((base-layer qwerty-home-row))   a break
        ((base-layer graphite-home-row)) n break
    )
    hrt2 (switch
        ((base-layer qwerty-home-row))   s break
        ((base-layer graphite-home-row)) r break
    )
    hrt3 (switch
        ((base-layer qwerty-home-row))   d break
        ((base-layer graphite-home-row)) t break
    )
    hrt4 (switch
        ((base-layer qwerty-home-row))   f break
        ((base-layer graphite-home-row)) s break
    )
    hrt5 (switch
        ((base-layer qwerty-home-row))   j break
        ((base-layer graphite-home-row)) h break
    )
    hrt6 (switch
        ((base-layer qwerty-home-row))   k break
        ((base-layer graphite-home-row)) a break
    )
    hrt7 (switch
        ((base-layer qwerty-home-row))   l break
        ((base-layer graphite-home-row)) e break
    )
    hrt8 (switch
        ((base-layer qwerty-home-row))   ; break
        ((base-layer graphite-home-row)) i break
    )

    hr1 (tap-dance $timeout ((multi XX (tap-hold $tap-time $hold-time @hrt1 lmet)) @hrt1))
    hr2 (tap-dance $timeout ((multi XX (tap-hold $tap-time $hold-time @hrt2 lalt)) @hrt2))
    hr3 (tap-dance $timeout ((multi XX (tap-hold $tap-time $hold-time @hrt3 lsft)) @hrt3))
    hr4 (tap-dance $timeout ((multi XX (tap-hold $tap-time $hold-time @hrt4 lctl)) @hrt4))
    hr5 (tap-dance $timeout ((multi XX (tap-hold $tap-time $hold-time @hrt5 rctl)) @hrt5))
    hr6 (tap-dance $timeout ((multi XX (tap-hold $tap-time $hold-time @hrt6 rsft)) @hrt6))
    hr7 (tap-dance $timeout ((multi XX (tap-hold $tap-time $hold-time @hrt7 ralt)) @hrt7))
    hr8 (tap-dance $timeout ((multi XX (tap-hold $tap-time $hold-time @hrt8 rmet)) @hrt8))

    cw (caps-word $long-timeout)
    tab C-tab

    !  S-1
    ^  S-6
    %  S-5
    $  S-4
    <  S-,
    {  S-[
    op S-9
    &  S-7
    |  S-\
    cp S-0
    }  S-]
    >  S-.
    ?  S-/
    #  S-3
    @  S-2
    _  S-min

    g' (fork apos S-min  (lsft rsft d k))
    g, (fork ,    S-/    (lsft rsft d k))
    g- (fork min  S-apos (lsft rsft d k))
    g/ (fork /    S-,    (lsft rsft d k))

    *   (fork kp* kp/         (lsft rsft d k))
    +   (fork kp+ kp-         (lsft rsft d k))
    car (fork S-6 S-5         (lsft rsft d k))
    .   (fork kp. (unshift ,) (lsft rsft d k))

    f1  (fork f1  f13 (caps))
    f2  (fork f2  f14 (caps))
    f3  (fork f3  f15 (caps))
    f4  (fork f4  f16 (caps))
    f5  (fork f5  f17 (caps))
    f6  (fork f6  f18 (caps))
    f7  (fork f7  f19 (caps))
    f8  (fork f8  f20 (caps))
    f9  (fork f9  f21 (caps))
    f10 (fork f10 f22 (caps))
    f11 (fork f11 f23 (caps))
    f12 (fork f12 f24 (caps))
)

(defchords binary $timeout
    (1      ) 1
    (  2    ) 2
    (1 2    ) 3
    (    4  ) 4
    (1   4  ) 5
    (  2 4  ) 6
    (1 2 4  ) 7
    (      8) 8
    (1     8) 9
    (  2   8) (multi 1 0)
    (1 2   8) (multi 1 1)
    (    4 8) (multi 1 2)
    (1   4 8) (multi 1 3)
    (  2 4 8) (multi 1 4)
    (1 2 4 8) (multi 1 5)
)

(defalias
    ch1 (chord binary 1)
    ch2 (chord binary 2)
    ch4 (chord binary 4)
    ch8 (chord binary 8)
)

(defzippy
    zippy.txt
    output-character-mappings (
        @ S-2
    )
)
